<%@ page language="java" pageEncoding="UTF-8" %>
    <!DOCTYPE html>
    <html lang="ru">

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>–ò–∑–±—Ä–∞–Ω–Ω–æ–µ</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
        <link href="static/css/home-style.css" rel="stylesheet">
    </head>

    <body>
        <header class="main-header">
            <nav class="navbar navbar-expand-lg">
                <div class="container-fluid" id="navbar">
                    <a class="navbar-brand" href="/">BOWWOW</a>
                    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarText"
                        aria-controls="navbarText" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <div class="collapse navbar-collapse" id="navbarText">
                        <ul class="navbar-nav ms-auto d-flex align-items-center">
                            <li class="nav-item">
                                <a class="nav-link" href="#">rehoming</a>
                            <li class="nav-item text-center">
                                <a class="nav-link" href="#">dog advice</a>
                            </li>
                            <li class="nav-item text-center">
                                <a class="nav-link" href="#">how we help</a>
                            </li>
                            <li class="nav-item text-center">
                                <a class="nav-link" href="#">support us</a>
                            </li>
                            <li class="nav-item text-center">
                                <a class="nav-link" href="#">about us</a>
                            </li>
                            <li class="nav-item">
                                <a class="navbar-btn" href="#">
                                    <img src="static/png/profile.png" alt="Profile">
                                </a>
                            </li>
                        </ul>
                    </div>
            </nav>
        </header>

        <div class="title_top" style="z-index: 3; overflow: visible;">
            <p class="title_top_favorite">–ò–∑–±—Ä–∞–Ω–Ω—ã–µ –ø–∏—Ç–æ–º—Ü—ã</p>
        </div>
        <div class="container mt-4">
            <div id="loading-indicator" style="display: none;">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
            <div id="favorite-list" class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
                <!-- –ö–∞—Ä—Ç–æ—á–∫–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è —Å—é–¥–∞ -->
            </div>

        </div>

        <script type="module">
            import FavoriteService from './js/favorite-service.js';

            document.addEventListener("DOMContentLoaded", async () => {
                const loadingIndicator = document.getElementById("loading-indicator");
                loadingIndicator.style.display = "block"; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä

                try {
                    const favorites = await FavoriteService.getFavorites();
                    console.log("–ò–∑–±—Ä–∞–Ω–Ω—ã–µ –ø–∏—Ç–æ–º—Ü—ã:", favorites);

                    renderFavorites(favorites); // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é renderFavorites
                } catch (error) {
                    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:", error);
                } finally {
                    loadingIndicator.style.display = "none"; // –°–∫—Ä—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä
                }
            });

            function renderFavorites(favorites) {
                const container = document.getElementById("favorite-list");
                if (!container) {
                    console.error("–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä favorite-list –Ω–µ –Ω–∞–π–¥–µ–Ω!");
                    return;
                }

                container.innerHTML = ""; // –û—á–∏—â–∞–µ–º –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –∫–∞—Ä—Ç–æ—á–µ–∫

                if (!Array.isArray(favorites) || favorites.length === 0) {
                    container.innerHTML = "<p class='text-center text-muted'>–ù–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –ø–∏—Ç–æ–º—Ü–µ–≤</p>";
                    return;
                }

                console.log("–î–∞–Ω–Ω—ã–µ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö:", favorites); // –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ

                favorites.forEach((fav, index) => {
                    console.log(`–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç ${index}:`, fav); // –õ–æ–≥–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç

                    if (!fav || !fav.pet) {
                        console.warn(`–û—à–∏–±–∫–∞: fav –∏–ª–∏ fav.pet –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —ç–ª–µ–º–µ–Ω—Ç–µ ${index}`, fav);
                        return;
                    }

                    const pet = fav.pet;
                    console.log(`üê∂ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–∏—Ç–æ–º—Ü–∞ ${index}:`, pet); // –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–∏—Ç–æ–º—Ü–∞

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å–ª–∏ null –∏–ª–∏ undefined - –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
                    function safeValue(value) {
                        return value !== null && value !== undefined ? value : "–ù–µ —É–∫–∞–∑–∞–Ω–æ";
                    }

                    const petData = {
                        nickname: safeValue(pet.nickname),
                        breed: safeValue(pet.breed),
                        cityId: safeValue(pet.cityId),
                        age: safeValue(pet.age),
                        color: safeValue(pet.color),
                        gender: safeValue(pet.gender),
                        size: safeValue(pet.size),
                        sterilized: pet.sterilized ? "–î–∞" : "–ù–µ—Ç",
                        vaccinated: pet.vaccinated ? "–î–∞" : "–ù–µ—Ç"
                    };

                    console.log(`üìå –î–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ ${index}:`, petData); // –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏

                    // –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –≤—Ä—É—á–Ω—É—é
                    const card = document.createElement("div");
                    card.className = "card shadow-sm p-3 mb-4";

                    const cardBody = document.createElement("div");
                    cardBody.className = "card-body";

                    // –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
                    const title = document.createElement("h5");
                    title.className = "card-title text-center";
                    title.textContent = petData.nickname;
                    cardBody.appendChild(title);

                    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞
                    const breed = document.createElement("p");
                    breed.className = "card-text";
                    breed.innerHTML = `<strong>–ü–æ—Ä–æ–¥–∞:</strong> ` + petData.breed;
                    cardBody.appendChild(breed);

                    const cityId = document.createElement("p");
                    cityId.className = "card-text";
                    cityId.innerHTML = `<strong>–ì–æ—Ä–æ–¥ ID:</strong> ` + petData.cityId;
                    cardBody.appendChild(cityId);

                    const age = document.createElement("p");
                    age.className = "card-text";
                    age.innerHTML = `<strong>–í–æ–∑—Ä–∞—Å—Ç:</strong> ` + petData.age;
                    cardBody.appendChild(age);

                    const color = document.createElement("p");
                    color.className = "card-text";
                    color.innerHTML = `<strong>–¶–≤–µ—Ç:</strong> ` + petData.color;
                    cardBody.appendChild(color);

                    const size = document.createElement("p");
                    size.className = "card-text";
                    size.innerHTML = `<strong>–†–∞–∑–º–µ—Ä:</strong> ` + petData.size;
                    cardBody.appendChild(size);

                    const gender = document.createElement("p");
                    gender.className = "card-text";
                    gender.innerHTML = `<strong>–ü–æ–ª:</strong> ` + petData.gender;
                    cardBody.appendChild(gender);

                    const sterilized = document.createElement("p");
                    sterilized.className = "card-text";
                    sterilized.innerHTML = `<strong>–°—Ç–µ—Ä–∏–ª–∏–∑–æ–≤–∞–Ω:</strong> ` + petData.sterilized;
                    cardBody.appendChild(sterilized);

                    const vaccinated = document.createElement("p");
                    vaccinated.className = "card-text";
                    vaccinated.innerHTML = `<strong>–í–∞–∫—Ü–∏–Ω–∏—Ä–æ–≤–∞–Ω:</strong> ` + petData.vaccinated;
                    cardBody.appendChild(vaccinated);

                    // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É "–£–±—Ä–∞—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ"
                    const removeButton = document.createElement("button");
                    removeButton.className = "btn btn-danger mt-3";
                    removeButton.textContent = "–£–±—Ä–∞—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ";
                    removeButton.addEventListener("click", async () => {
                        try {
                            const result = await FavoriteService.removeFromFavorites(pet.id);
                            if (result) {
                                console.log("–ü–∏—Ç–æ–º–µ—Ü —É–¥–∞–ª–µ–Ω –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:", result);
                                // –£–¥–∞–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –∏–∑ DOM
                                card.remove();
                            } else {
                                console.error("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–∏—Ç–æ–º—Ü–∞ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ");
                            }
                        } catch (error) {
                            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:", error);
                        }
                    });
                    cardBody.appendChild(removeButton);

                    card.appendChild(cardBody);
                    container.appendChild(card);

                    console.log(`–ö–∞—Ä—Ç–æ—á–∫–∞ ${index} –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ DOM:`, card); // –õ–æ–≥–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É
                });
            }
        </script>


    </body>

    </html>